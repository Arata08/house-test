{"remainingRequest":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\thread-loader\\dist\\cjs.js!D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\src\\plugins\\download.js","dependencies":[{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\src\\plugins\\download.js","mtime":1711629746000},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\babel.config.js","mtime":1711629746000},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713447874049},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1713447874004},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1713447933757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiRDovV0Qvc3R1ZHkvXHU1RkFFXHU0RkUxXHU1QzBGXHU3QTBCXHU1RThGL2hvdXNlLW1hc3RlciAoMSkvc291cmNlLXZ1ZS11aS1tYXN0ZXIvc291cmNlLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovV0Qvc3R1ZHkvXHU1RkFFXHU0RkUxXHU1QzBGXHU3QTBCXHU1RThGL2hvdXNlLW1hc3RlciAoMSkvc291cmNlLXZ1ZS11aS1tYXN0ZXIvc291cmNlLXVpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBNZXNzYWdlIH0gZnJvbSAnZWxlbWVudC11aSc7CmltcG9ydCB7IHNhdmVBcyBhcyBfc2F2ZUFzIH0gZnJvbSAnZmlsZS1zYXZlcic7CmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsKaW1wb3J0IGVycm9yQ29kZSBmcm9tICdAL3V0aWxzL2Vycm9yQ29kZSc7CmltcG9ydCB7IGJsb2JWYWxpZGF0ZSB9IGZyb20gIkAvdXRpbHMvcnVveWkiOwp2YXIgYmFzZVVSTCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiBmdW5jdGlvbiBuYW1lKF9uYW1lKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgdmFyIGlzRGVsZXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiB0cnVlOwogICAgdmFyIHVybCA9IGJhc2VVUkwgKyAiL2NvbW1vbi9kb3dubG9hZD9maWxlTmFtZT0iICsgZW5jb2RlVVJJKF9uYW1lKSArICImZGVsZXRlPSIgKyBpc0RlbGV0ZTsKICAgIGF4aW9zKHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiB1cmwsCiAgICAgIHJlc3BvbnNlVHlwZTogJ2Jsb2InLAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyBnZXRUb2tlbigpCiAgICAgIH0KICAgIH0pLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlcykgewogICAgICAgIHZhciBpc0xvZ2luLCBibG9iOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBibG9iVmFsaWRhdGUocmVzLmRhdGEpOwogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgaXNMb2dpbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgaWYgKGlzTG9naW4pIHsKICAgICAgICAgICAgICAgIGJsb2IgPSBuZXcgQmxvYihbcmVzLmRhdGFdKTsKICAgICAgICAgICAgICAgIF90aGlzLnNhdmVBcyhibG9iLCBkZWNvZGVVUkkocmVzLmhlYWRlcnNbJ2Rvd25sb2FkLWZpbGVuYW1lJ10pKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMucHJpbnRFcnJNc2cocmVzLmRhdGEpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCkpOwogIH0sCiAgcmVzb3VyY2U6IGZ1bmN0aW9uIHJlc291cmNlKF9yZXNvdXJjZSkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICB2YXIgdXJsID0gYmFzZVVSTCArICIvY29tbW9uL2Rvd25sb2FkL3Jlc291cmNlP3Jlc291cmNlPSIgKyBlbmNvZGVVUkkoX3Jlc291cmNlKTsKICAgIGF4aW9zKHsKICAgICAgbWV0aG9kOiAnZ2V0JywKICAgICAgdXJsOiB1cmwsCiAgICAgIHJlc3BvbnNlVHlwZTogJ2Jsb2InLAogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyBnZXRUb2tlbigpCiAgICAgIH0KICAgIH0pLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzKSB7CiAgICAgICAgdmFyIGlzTG9naW4sIGJsb2I7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYmxvYlZhbGlkYXRlKHJlcy5kYXRhKTsKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGlzTG9naW4gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBpZiAoaXNMb2dpbikgewogICAgICAgICAgICAgICAgYmxvYiA9IG5ldyBCbG9iKFtyZXMuZGF0YV0pOwogICAgICAgICAgICAgICAgX3RoaXMyLnNhdmVBcyhibG9iLCBkZWNvZGVVUkkocmVzLmhlYWRlcnNbJ2Rvd25sb2FkLWZpbGVuYW1lJ10pKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgX3RoaXMyLnByaW50RXJyTXNnKHJlcy5kYXRhKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfTsKICAgIH0oKSk7CiAgfSwKICB6aXA6IGZ1bmN0aW9uIHppcCh1cmwsIG5hbWUpIHsKICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgdmFyIHVybCA9IGJhc2VVUkwgKyB1cmw7CiAgICBheGlvcyh7CiAgICAgIG1ldGhvZDogJ2dldCcsCiAgICAgIHVybDogdXJsLAogICAgICByZXNwb25zZVR5cGU6ICdibG9iJywKICAgICAgaGVhZGVyczogewogICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgZ2V0VG9rZW4oKQogICAgICB9CiAgICB9KS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHJlcykgewogICAgICAgIHZhciBpc0xvZ2luLCBibG9iOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGJsb2JWYWxpZGF0ZShyZXMuZGF0YSk7CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBpc0xvZ2luID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgaWYgKGlzTG9naW4pIHsKICAgICAgICAgICAgICAgIGJsb2IgPSBuZXcgQmxvYihbcmVzLmRhdGFdLCB7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdhcHBsaWNhdGlvbi96aXAnCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIF90aGlzMy5zYXZlQXMoYmxvYiwgbmFtZSk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIF90aGlzMy5wcmludEVyck1zZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSk7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gzKSB7CiAgICAgICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCkpOwogIH0sCiAgc2F2ZUFzOiBmdW5jdGlvbiBzYXZlQXModGV4dCwgbmFtZSwgb3B0cykgewogICAgX3NhdmVBcyh0ZXh0LCBuYW1lLCBvcHRzKTsKICB9LAogIHByaW50RXJyTXNnOiBmdW5jdGlvbiBwcmludEVyck1zZyhkYXRhKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgdmFyIHJlc1RleHQsIHJzcE9iaiwgZXJyTXNnOwogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gZGF0YS50ZXh0KCk7CiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHJlc1RleHQgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgcnNwT2JqID0gSlNPTi5wYXJzZShyZXNUZXh0KTsKICAgICAgICAgICAgZXJyTXNnID0gZXJyb3JDb2RlW3JzcE9iai5jb2RlXSB8fCByc3BPYmoubXNnIHx8IGVycm9yQ29kZVsnZGVmYXVsdCddOwogICAgICAgICAgICBNZXNzYWdlLmVycm9yKGVyck1zZyk7CiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0KTsKICAgIH0pKSgpOwogIH0KfTs="},null]}