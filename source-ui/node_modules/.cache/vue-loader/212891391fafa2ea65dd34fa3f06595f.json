{"remainingRequest":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\src\\views\\house\\houseRoom\\index.vue?vue&type=template&id=96901076&scoped=true","dependencies":[{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\src\\views\\house\\houseRoom\\index.vue","mtime":1711629746000},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713447874049},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1713447963648},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713447874049},{"path":"D:\\WD\\study\\微信小程序\\house-master (1)\\source-vue-ui-master\\source-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":1713447946641}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}